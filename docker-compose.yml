version: "3.8"


services:

  postgres:
    image: postgres:12.5-alpine
    env_file: .env
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6.0-alpine
    ports:
      - 6379:6379

  zookeeper:
    image: zookeeper:3.6.2
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:6.0.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      # https://github.com/simplesteph/kafka-stack-docker-compose/blob/master/zk-single-kafka-single.yml
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka:/var/lib/kafka/data

  check_scheduler:
    build: .
    # TODO: a bit ugly way to wait services start, better to use healthcheck instead
    command: bash -c "sleep 5 && venv/bin/arq service.jobs.CheckSchedulerWorkerSettings"
    depends_on:
      - postgres
      - redis
    env_file: .env
    volumes:
      - ./service:/app/service  # for dev purpose

  availability_checker:
    build: .
    # TODO: a bit ugly way to wait services start, better to use healthcheck instead
    command: bash -c "sleep 5 && venv/bin/arq service.jobs.AvailabilityCheckerWorkerSettings"
    depends_on:
      - redis
      - kafka
    env_file: .env
    volumes:
      - ./cert:/app/cert  # for dev purpose
      - ./service:/app/service  # for dev purpose

  kafka_to_postgres_transfer:
    build: .
    # TODO: a bit ugly way to wait services start, better to use healthcheck instead
    command: bash -c "sleep 5 && venv/bin/arq service.jobs.KafkaToPostgresTransferWorkerSettings"
    depends_on:
      - postgres
      - kafka
    env_file: .env
    volumes:
      - ./cert:/app/cert  # for dev purpose
      - ./service:/app/service  # for dev purpose

volumes:
  pgdata:
  kafka:
